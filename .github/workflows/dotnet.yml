# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

permissions: 
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]
    paths: 
    - "Application/**"
  pull_request:
    branches: [ "main" ]
    paths: 
    - "Application/**"

env:
  registryName: tdqi2aiswvebkmpnpreg.azurecr.io
  repositoryName: techboost/dotnetcoreapp
  dockerFolderPath: Application/src/RazorPagesTestSample
  tag: ${{ github.run_number }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      run: docker login $registryName -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag
  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: dev
      url: https://tdqi2aiswvebk-dev.azurewebsites.net/
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Set subscription
      run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v3.0.0
      with:
        app-name: tdqi2aiswvebk-dev
        images: tdqi2aiswvebkmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{ env.tag }}
  deploy-to-test:
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: test
      url: https://tdqi2aiswvebk-test.azurewebsites.net/
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Set subscription
      run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v3.0.0
      with:
        app-name: tdqi2aiswvebk-test
        images: tdqi2aiswvebkmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{ env.tag }}
    
  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: prod
      url: https://tdqi2aiswvebk-prod.azurewebsites.net/
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Set subscription
      run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v3.0.0
      with:
        app-name: tdqi2aiswvebk-prod
        images: tdqi2aiswvebkmpnpreg.azurecr.io/techboost/dotnetcoreapp:${{ env.tag }}
    
